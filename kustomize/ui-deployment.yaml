kind: Deployment
apiVersion: apps/v1
metadata:
  name: app-flask
  namespace: project
  labels:
    app: app-flask
  annotations:
    deployment.kubernetes.io/revision: '12'
    kubesphere.io/creator: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-flask
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app-flask
      annotations:
        kubesphere.io/creator: admin
        kubesphere.io/imagepullsecrets: '{}'
        kubesphere.io/restartedAt: '2024-10-31T07:46:18.878Z'
    spec:
      containers:
        - name: container-iyob88
          image: 'digo66/app_flask:v2'
          ports:
            - name: tcp-8000
              containerPort: 8000
              protocol: TCP
            - name: tcp-8080
              containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600